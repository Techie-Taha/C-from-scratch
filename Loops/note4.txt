___1___
for loop. 3 parameters
int i which is the initialization that happens for only once
steps: 
1) Check the condtion, if true the print whatever is in the loop
2) then increament like i++, if i = 1 before, now it's 2, then check the condtion again and if true then print the result or break the loop.

#include<iostream>
using namespace std;
int main(){
    



// Initialization which happens only for once, i = 1;
// condtion, i < 5; if true then print the result "I love you". In the terminal I love you
// then i++ means increament the value by 1, check condition again, is 2 less than 5, yes. If true then print the result I love you again, if not then break the loop


for(int i = 1; i < 5; i++){
    cout << "I love you" << endl;
}

    //return 0;
}
___2___
// Print all the even numbers from 1 to 10
// Code remains the same just before printing the result, put a condition, like only print if it's true. 

#include<iostream>
using namespace std;
int main(){
    


----------for even

for(int i = 1; i <= 10; i++){
    if(i % 2 == 0){
        cout << i << endl; // before printing just put a condition. just print i
    }
}

---------for odd

for(int i = 1; i <= 10; i++){
    if(i % 2 != 0){
        cout << i << endl; // before printing just put a condition. just print i
    }
}

    return 0;
}

___2___
while loop syntax:
1) In while loop the initialization happens outside.
then while(condition){
    if true then will print the result
    then will increament 
}
Example:
#include<iostream>
using namespace std;
int main(){
    int i = 1; // initialization
    while(i <= 10){
        cout << i << endl;
    }
}
___3___

// Write a program to print sum of digits of a given number 

#include<iostream>
using namespace std;
int main (){

    int number; // initialization
    cin >> number; // Then we ask let's say 55
    int sum;
    sum = 0; // for now, and this will store the result as the loop works 


    while(number != 0){ // after each iteration, number can't be 0
        
        int lastDigit = number % 10;
        number = number / 10;
        sum += lastDigit;


    }
    cout << sum;

    return 0;
}

// first iteration:
//number 55; last digit becomes 5 because 55 % 10 is 5. then number becomes 5 because 55 / 10 is 5. Then we add last digit to sum like 0+5 = 5

// second iteration:
// now number is 5; last digit becomes 5 because 5 % 10 is. Then number becomes 0 because 5 / 10 is 0. Then we add last digit to sum like 5+5 = 10
// There's no 3rd iteration because now number is equal to 0 and the condtion says number can't 0.